spring:
  application:
    name: resilience-app
  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/resilience4j}
    username: ${DATASOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:postgrespw}
    hikari:
      minimumIdle: ${HIKARI_POOL_MINIMUM_IDLE:20}
      maximumPoolSize: ${HIKARI_POOL_MAXIMUM_POOL_SIZE:220}
      idleTimeout: ${HIKARI_POOL_IDLE_TIMEOUT:10000}
      maxLifetime: 2000000
      connectionTimeout: ${HIKARI_CONNECTION_TIMEOUT:30000}
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non-contextual-creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update

management:
  server:
    port: 8081
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: true

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        failure-rate-threshold: 40
        minimum-number-of-calls: 20
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 10
        sliding-window-size: 20
        sliding-window-type: count_based
        slow-call-duration-threshold: 10s
        slow-call-rate-threshold: 70
    instances:
      externalService:
        base-config: default
      importantService:
        base-config: default
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 75